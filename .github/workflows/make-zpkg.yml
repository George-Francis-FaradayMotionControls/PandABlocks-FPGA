name: Make zpkg CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      
      # Git repositories
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          path: PandABlocks-fpga
          # require history to get back to last tag for version number of branches
          fetch-depth: 0

      - name: Checkout PandABlocks-rootfs
        uses: actions/checkout@v2
        with:
          repository: PandABlocks/PandABlocks-rootfs
          ref: ci-build
          path: PandABlocks-rootfs

      - name: Checkout rootfs builder
        uses: actions/checkout@v2
        with:
          repository: dls-controls/rootfs
          path: rootfs

      # System dependencies
      - name: Install system dependencies
        run: |
          sudo ln -s make /usr/bin/gmake
          sudo apt-get install -y libtinfo5 dbus-x11
          pip install jinja2 numpy

      # Installation of go & temporary rclone patch applied until this issue is resolved
      # https://github.com/rclone/rclone/issues/2975
      - name: Install go
        run: |
          curl -OL https://golang.org/dl/go1.17.linux-amd64.tar.gz
          sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.17.linux-amd64.tar.gz
          export PATH=$PATH:/usr/local/go/bin
          go version

      - name: Install rclone with --links patch
        run: |       
          git clone https://github.com/dinoboy197/rclone.git
          cd rclone
          make
          ls ~/go/bin
          chmod +x /usr/bin/rclone
          . /usr/bin/rclone
          rclone version


      # Tar dependancies
      - name: Download tar file dependencies
        run: |
          bash PandABlocks-rootfs/.github/scripts/tar-files.sh linux-only
          cd tar-files
          curl -o device-tree-xlnx-xilinx-v2020.2.tar.gz -L https://github.com/Xilinx/device-tree-xlnx/archive/refs/tags/xilinx-v2020.2.tar.gz
    
      # S3 bucket
      - name: Mount Vivado S3 bucket
        #run: |
        #  sudo mkdir -p /scratch/Xilinx
        #  sudo chmod -R a+rw /scratch
        #  sudo ls -l /scratch
        #  echo ${{ secrets.VIVADO_S3_ACCESS_KEY_ID }}:${{ secrets.VIVADO_S3_SECRET_ACCESS_KEY }} > ~/.passwd-s3fs
        #  chmod 600 ~/.passwd-s3fs
        #  s3fs dls-controls-fpga-vivado /scratch/Xilinx -o passwd_file=${HOME}/.passwd-s3fs -o url=https://s3.echo.stfc.ac.uk -o use_path_request_style -o ro        
        run: |
          sudo bash PandABlocks-fpga/.github/scripts/mount-s3-bucket.sh ${{ secrets.VIVADO_S3_ACCESS_KEY_ID }} ${{ secrets.VIVADO_S3_SECRET_ACCESS_KEY }}

      #CONFIG files
      - name: Generate rootfs CONFIG files - zynq
        run: |
          mkdir build
          bash PandABlocks-rootfs/.github/scripts/config-file-pbrootfs.sh zynq
          bash PandABlocks-rootfs/.github/scripts/config-file-rootfs.sh

      - name: Generate fpga CONFIG file
        run: |
          bash PandABlocks-fpga/.github/scripts/config-file-fpga.sh
          cat PandABlocks-fpga/CONFIG

      # Verification of files/file structure
      - name: List workspace files
        run: |
          ls ${{ github.workspace }}
          echo " "
          ls PandABlocks-fpga
          echo " "
          ls PandABlocks-rootfs
          echo " "
          ls rootfs
          echo " "
          ls /scratch/Xilinx/Vivado/2020.2
          echo " "
          ls /scratch/Xilinx/Vivado/2020.2/gnu
          echo " "
          ls /scratch/Xilinx/Vitis/2020.2/gnu/aarch32
          echo " "
          ls /scratch/Xilinx/Vitis/2020.2/gnu/aarch32/lin
          echo " "
          ls /scratch/Xilinx/Vitis/2020.2/gnu/aarch32/lin/gcc-arm-none-eabi
          echo " "
          ls /scratch/Xilinx/Vitis/2020.2/gnu/aarch32/lin/gcc-arm-none-eabi/x86_64-oesdk-linux/lib/


      # Build
      - name: Make boot
        run: |
          cd PandABlocks-fpga
          make boot
          
        #  source /scratch/Xilinx/Vivado/2020.2/settings64.sh && vivado -mode batch
        #  source /scratch/Xilinx/Vivado/2020.2/settings64.sh && vivado -mode batch        
        # fusermount -u /scratch/Xilinx

      - name: Make carrier_fpga
        run: |
          cd PandABlocks-fpga
          make carrier_fpga

      # Verification of build files
      #- name: List build files
      #  run: ls build

      # Artifacts
      #- name: Upload deps and boot build files
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: fgpa-zpkg-${{ matrix.platform }}
      #    path: |
      #      build/panda-fpga@*.zpg

  #release:
  #  needs: [build]
  #  runs-on: ubuntu-latest
  #  # make a release on every tag
  #  if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
  #  steps:
  #    - uses: actions/download-artifact@v2
  #      with:
  #        name: |
  #          fgpa-zpkg-zynq
  #          fgpa-zpkg-zynqmp
  #        path:
  #          artifacts

  #    - name: Github Release
  #      # We pin to the SHA, not the tag, for security reasons.
  #      # https://docs.github.com/en/actions/learn-github-actions/security-hardening-for-github-actions#using-third-party-actions
  #      uses: softprops/action-gh-release@2d72d869af3bf23602f9593a1e3fd739b80ac1eb  # v0.1.12
  #      with:
  #        files: artifacts/*
  #        body: See [Changelog](CHANGELOG.rst) for more details
  #      env:
  #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
